@page
<div class="container" id="app">
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-6">&nbsp;</div>
        <div class="col-6">
            名称...<input type="text" v-model="userInput" />
            <br />
            消息...<input type="text" placeholder="请输入消息内容..." v-model="messageInput" />
            <input type="button" id="sendButton" v-on:click="send" value="发送" />
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-6">&nbsp;</div>
        <div id="messageBody" class="col-6" style="width: 400px; height: 500px; border: 1px solid #fa8072;overflow:auto;">
            <ul id="messagesList"></ul>
        </div>
    </div>
</div>
<script src="~/lib/signalr/signalr.js"></script>
<script src="~/lib/vue/vue.js"></script>
<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

    connection.on("ReceiveMessage", function (user, message) {
        var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        var encodedMsg = user + " 说： " + msg + " " + getNowDate();
        var li = document.createElement("li");
        li.textContent = encodedMsg;
        document.getElementById("messagesList").appendChild(li);
        var div = document.getElementById("messageBody");
        div.scrollTop = div.scrollHeight;
        _Notification(user, null);
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });

    //document.getElementById("sendButton").addEventListener("click", function (event) {
    //    var user = document.getElementById("userInput").value;
    //    var message = document.getElementById("messageInput").value;
    //    connection.invoke("SendMessage", user, message).catch(function (err) {
    //        return console.error(err.toString());
    //    });
    //    event.preventDefault();
    //});
    var vm = new Vue({
        el: "#app",
        data: {
            userInput: "",
            messageInput: ""
        },
        created: function () {
            var self = this;
            document.onkeydown = function (e) {
                var key = window.event.keyCode;
                if (key == 13) {
                    self.send();
                }
            }
        },
        methods: {
            send: function () {
                var self = this;
                if (self.userInput == "" || self.messageInput == "") {
                    alert("请输入名称或消息");
                    return;
                }
                connection.invoke("SendMessage", self.userInput, self.messageInput).catch(function (err) {
                    return console.error(err.toString());
                });
                vm.messageInput = "";
            }
        }
    });
    function _Notification(title, option) {
        var Notification = window.Notification || window.mozNotification || window.webkitNotification;
        Notification.permission === "granted" ? creatNotification(title, option) : requestPermission(title, option);
        function creatNotification(title, option) {
            var instance = new Notification(title, option);
            instance.onclick = function () {
                console.log('onclick');
            };
            instance.onerror = function () {
                console.log('onerror');
            };
            instance.onshow = function () {
                console.log('onshow');
            };
            instance.onclose = function () {
                console.log("close");
            }
        }
        function requestPermission(title, option) {
            Notification.requestPermission(function (status) {
                status === "granted" ? creatNotification(title, option) : failNotification(title);
            });
        }
        function failNotification(title) {
            var timer;
            return function (timer) {
                var index = 0;
                clearInterval(timer);
                timer = setInterval(function () {
                    if (index % 2) {
                        document.head.getElementsByTagName("title")[0].innerHTML = '【　　　】' + title;
                    } else {
                        document.head.getElementsByTagName("title")[0].innerHTML = '【新消息】' + title;
                    }
                    index++;
                    if (index > 20) {
                        clearInterval(timer);
                    }
                }, 500);
            }(timer);
        }
    };
    function getNowDate() {
        var date = new Date();
        var sign1 = "-";
        var sign2 = ":";
        var year = date.getFullYear() // 年
        var month = date.getMonth() + 1; // 月
        var day = date.getDate(); // 日
        var hour = date.getHours(); // 时
        var minutes = date.getMinutes(); // 分
        var seconds = date.getSeconds(); //秒
        var weekArr = ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期天'];
        var week = weekArr[date.getDay() - 1];
        // 给一位数数据前面加 “0”
        if (month >= 1 && month <= 9) {
            month = "0" + month;
        }
        if (day >= 0 && day <= 9) {
            day = "0" + day;
        }
        if (hour >= 0 && hour <= 9) {
            hour = "0" + hour;
        }
        if (minutes >= 0 && minutes <= 9) {
            minutes = "0" + minutes;
        }
        if (seconds >= 0 && seconds <= 9) {
            seconds = "0" + seconds;
        }
        var currentdate = year + sign1 + month + sign1 + day + " " + hour + sign2 + minutes + sign2 + seconds + " " + week;
        return currentdate;
    }
</script>